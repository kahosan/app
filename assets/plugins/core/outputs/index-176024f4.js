import{_ as m}from"../../../preload-helper-75e41364.js";import{j as s,d as g}from"../../../index-021ad583.js";import{P as f,i as h,a as n}from"../../../messenger-provider-a886fcd3.js";const x=()=>s.jsx(f,{placement:"top",content:s.jsxs(s.Fragment,{children:["Execute   ",s.jsxs("kbd",{children:[h?"⌘":"Ctrl"," + E"]})]}),offset:[0,6],children:s.jsx("button",{className:"excute",style:{"--btn-color":"#4eb03e"},onClick:()=>n.send("run"),children:s.jsx("div",{className:"cldr codicon codicon-play"})})});let l;const v="outputs",_=g(v,()=>({editor:{preload(i){const r=n.on("compile",()=>{if(!l){n.send("compile-completed",{"":{originalText:"",outputFiles:[{name:"(compile error)",text:"No output to compile, maybe the Editor is still loading",writeByteOrderMark:!1}]}});return}n.send("compile-completed",l)}),a=[i.languages.registerCompletionItemProvider(["typescript","javascript"],{triggerCharacters:["@"],async provideCompletionItems(e,t){if(t.lineNumber!==1)return;if(e.getLineContent(t.lineNumber).startsWith("// @"))return{suggestions:[{label:"devtools.output.compiled",detail:"Display the compiled output in the console's `.JS` tab",kind:i.languages.CompletionItemKind.Text,insertText:"devtools.output.compiled",range:new i.Range(t.lineNumber,t.column,t.lineNumber,t.column)}]}}})];return()=>{l=void 0,r(),a.forEach(e=>e.dispose())}},load(i,r){i.onDidChangeModelContent(function a(){const e=i.getModel();if(e){let t=Promise.resolve(void 0),u=!1;e.uri.path.match(/\.tsx?$/)&&(t=r.languages.typescript.getTypeScriptWorker()),e.uri.path.match(/\.jsx?$/)&&(u=!0,t=r.languages.typescript.getJavaScriptWorker()),t.then(o=>o==null?void 0:o(e.uri)).then(o=>o==null?void 0:o.getEmitOutput(e.uri.toString())).then(o=>{if(!o)return;const d=e.getValue(),p=e.uri.toString();l={[p]:{originalText:d,outputFiles:o.outputFiles}};const c=l[p];u&&(c.outputFiles=[{name:e.uri.toString(),writeByteOrderMark:!1,text:d}].concat(c.outputFiles)),n.send("compile-completed",l)})}return a}()),i.addCommand(r.KeyMod.CtrlCmd|r.KeyCode.KeyE,()=>n.send("run"))},topbar:[x]},devtools:({importInEvalLogs:i})=>i(new URL(Object.values(Object.assign({"./devtools.ts":()=>m(()=>import("../../../devtools-535c5d73.js"),["assets/devtools-535c5d73.js","assets/index-021ad583.js","assets/messenger-provider-a886fcd3.js","assets/messenger-provider-2a7236fe.css","assets/preload-helper-75e41364.js"])}))[0].toString().replace(/.*import\("(.+?)"\).*/,"$1"),import.meta.url).href).then(r=>r.default)}));export{_,v as i};
